docker build --tag alberes/register-manager:1.0.0 .

docker network create register-manager-network

docker run --name postgresdb -p 5432:5432 -e POSTGRES_PASSWORD=postgres -e POSTGRES=postgres -e POSTGRES_DB=register_manager -d postgres:16.3

docker run --name postgresdb -p 5432:5432 -e POSTGRES_PASSWORD=postgres -e POSTGRES=postgres -e POSTGRES_DB=register_manager --network register-manager-network -d postgres:16.3

docker run --name register-manager --network register-manager-network -p 8081:8081 -d alberes/register-manager:1.0.0

Hibernate: 
create table address (
	id uuid not null,
	additional_address varchar(100),
	city varchar(100) not null,
	created_date timestamp(6) not null,
	last_modified_date timestamp(6) not null,
	neighborhood varchar(100) not null,
	number integer not null,
	public_area varchar(100) not null,
	state varchar(50) not null,
	zip_code varchar(8) not null,
	user_id uuid not null,
	primary key (id)
)
Hibernate: 
create table user_account (
	id uuid not null,
	created_date timestamp(6) not null,
	email varchar(100) not null,
	last_modified_date timestamp(6) not null,
	name varchar(100) not null,
	password varchar(200) not null,
	primary key (id)
)
Hibernate: 
create table user_account_role (
	user_account_id uuid not null,
	roles varchar(255)
)
Hibernate: 
alter table if exists user_account 
   drop constraint if exists UKhl02wv5hym99ys465woijmfib
Hibernate: 
alter table if exists user_account 
   add constraint UKhl02wv5hym99ys465woijmfib unique (email)
Hibernate: 
alter table if exists address 
   add constraint FK7aekkir5nb594est3cq9k7f2e 
   foreign key (user_id) 
   references user_account
Hibernate: 
alter table if exists user_account_role 
   add constraint FKsfh6ebm1waiplr0998y3w7e3m 
   foreign key (user_account_id) 
   references user_account
